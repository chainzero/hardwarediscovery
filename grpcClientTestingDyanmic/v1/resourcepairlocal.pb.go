// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: akash/inventory/v1/resourcepairlocal.proto

package v1

import (
	fmt "fmt"
	_ "github.com/akash-network/akash-api/go/node/types/v1beta3"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ResourcePairLocal struct {
	Allocatable string `protobuf:"bytes,1,opt,name=allocatable,proto3" json:"allocatable" yaml:"allocatable"`
	Allocated   string `protobuf:"bytes,2,opt,name=allocated,proto3" json:"allocated" yaml:"allocated"`
}

func (m *ResourcePairLocal) Reset()         { *m = ResourcePairLocal{} }
func (m *ResourcePairLocal) String() string { return proto.CompactTextString(m) }
func (*ResourcePairLocal) ProtoMessage()    {}
func (*ResourcePairLocal) Descriptor() ([]byte, []int) {
	return fileDescriptor_4eca3cea3a035625, []int{0}
}
func (m *ResourcePairLocal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourcePairLocal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourcePairLocal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourcePairLocal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourcePairLocal.Merge(m, src)
}
func (m *ResourcePairLocal) XXX_Size() int {
	return m.Size()
}
func (m *ResourcePairLocal) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourcePairLocal.DiscardUnknown(m)
}

var xxx_messageInfo_ResourcePairLocal proto.InternalMessageInfo

func (m *ResourcePairLocal) GetAllocatable() string {
	if m != nil {
		return m.Allocatable
	}
	return ""
}

func (m *ResourcePairLocal) GetAllocated() string {
	if m != nil {
		return m.Allocated
	}
	return ""
}

func init() {
	proto.RegisterType((*ResourcePairLocal)(nil), "akash.inventory.v1.ResourcePairLocal")
}

func init() {
	proto.RegisterFile("akash/inventory/v1/resourcepairlocal.proto", fileDescriptor_4eca3cea3a035625)
}

var fileDescriptor_4eca3cea3a035625 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0x6b, 0x06, 0xa4, 0xa4, 0x0b, 0x44, 0x0c, 0x55, 0x07, 0x1b, 0x65, 0x42, 0x48, 0xc4,
	0x0a, 0x65, 0x62, 0x6b, 0xe7, 0x0c, 0x28, 0x03, 0x03, 0xdb, 0x75, 0x6a, 0xa5, 0x56, 0xd3, 0x38,
	0x72, 0x9c, 0xa0, 0xbe, 0x05, 0xaf, 0xc3, 0x1b, 0x30, 0x76, 0x64, 0xb2, 0x50, 0xb2, 0x75, 0xec,
	0x13, 0xa0, 0xfc, 0x40, 0xd2, 0xed, 0xde, 0x73, 0xbf, 0x7b, 0x8e, 0x74, 0xec, 0x7b, 0xd8, 0x42,
	0xbe, 0xa1, 0x22, 0x2d, 0x79, 0xaa, 0xa5, 0xda, 0xd3, 0xd2, 0xa7, 0x8a, 0xe7, 0xb2, 0x50, 0x11,
	0xcf, 0x40, 0xa8, 0x44, 0x46, 0x90, 0x78, 0x99, 0x92, 0x5a, 0x3a, 0x4e, 0xcb, 0x7a, 0xff, 0xac,
	0x57, 0xfa, 0x73, 0xb7, 0xfb, 0x67, 0x90, 0x73, 0x5a, 0xfa, 0x8c, 0x6b, 0x58, 0x50, 0xd0, 0x5a,
	0x09, 0x56, 0x68, 0xde, 0xfd, 0xcd, 0x6f, 0x62, 0x19, 0xcb, 0x76, 0xa4, 0xcd, 0xd4, 0xa9, 0xee,
	0x27, 0xb2, 0xaf, 0xc3, 0x3e, 0xe9, 0x05, 0x84, 0x0a, 0x9a, 0x24, 0xe7, 0xd5, 0x9e, 0x42, 0xd2,
	0x84, 0x6a, 0x60, 0x09, 0x9f, 0xa1, 0x5b, 0x74, 0x67, 0xad, 0x9e, 0x2a, 0x43, 0xa6, 0xcb, 0x41,
	0x3e, 0x1a, 0x32, 0xa6, 0x4e, 0x86, 0x38, 0x7b, 0xd8, 0x25, 0xcf, 0xee, 0x48, 0x74, 0xc3, 0x31,
	0xe2, 0x04, 0xb6, 0xd5, 0xaf, 0x7c, 0x3d, 0xbb, 0x68, 0x5d, 0xbd, 0xca, 0x10, 0x6b, 0xf9, 0x27,
	0x1e, 0x0d, 0x19, 0x88, 0x93, 0x21, 0x57, 0x67, 0x8e, 0x7c, 0xed, 0x86, 0xc3, 0x79, 0x15, 0x7c,
	0x55, 0x18, 0x1d, 0x2a, 0x8c, 0x7e, 0x2a, 0x8c, 0x3e, 0x6a, 0x3c, 0x39, 0xd4, 0x78, 0xf2, 0x5d,
	0xe3, 0xc9, 0xdb, 0x63, 0x2c, 0xf4, 0xa6, 0x60, 0x5e, 0x24, 0x77, 0xb4, 0xad, 0xe6, 0x21, 0xe5,
	0xfa, 0x5d, 0xaa, 0x6d, 0xbf, 0x41, 0x26, 0x68, 0x2c, 0xcf, 0xfa, 0x66, 0x97, 0x6d, 0x21, 0x8b,
	0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x21, 0xf5, 0xca, 0x80, 0x8c, 0x01, 0x00, 0x00,
}

func (m *ResourcePairLocal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourcePairLocal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourcePairLocal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Allocated) > 0 {
		i -= len(m.Allocated)
		copy(dAtA[i:], m.Allocated)
		i = encodeVarintResourcepairlocal(dAtA, i, uint64(len(m.Allocated)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Allocatable) > 0 {
		i -= len(m.Allocatable)
		copy(dAtA[i:], m.Allocatable)
		i = encodeVarintResourcepairlocal(dAtA, i, uint64(len(m.Allocatable)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintResourcepairlocal(dAtA []byte, offset int, v uint64) int {
	offset -= sovResourcepairlocal(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ResourcePairLocal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Allocatable)
	if l > 0 {
		n += 1 + l + sovResourcepairlocal(uint64(l))
	}
	l = len(m.Allocated)
	if l > 0 {
		n += 1 + l + sovResourcepairlocal(uint64(l))
	}
	return n
}

func sovResourcepairlocal(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozResourcepairlocal(x uint64) (n int) {
	return sovResourcepairlocal(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ResourcePairLocal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourcepairlocal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourcePairLocal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourcePairLocal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Allocatable", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourcepairlocal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourcepairlocal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourcepairlocal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Allocatable = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Allocated", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourcepairlocal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourcepairlocal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourcepairlocal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Allocated = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourcepairlocal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourcepairlocal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipResourcepairlocal(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowResourcepairlocal
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResourcepairlocal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResourcepairlocal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthResourcepairlocal
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupResourcepairlocal
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthResourcepairlocal
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthResourcepairlocal        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowResourcepairlocal          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupResourcepairlocal = fmt.Errorf("proto: unexpected end of group")
)
